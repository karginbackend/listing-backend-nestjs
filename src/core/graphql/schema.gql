# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccountModel {
  agency: AgencyModel
  avatarUrl: String!
  createdAt: DateTime!
  email: String!
  id: ID!
  isEmailVerified: Boolean!
  phoneNumber: String!
  rating: Float!
  role: String!
  updatedAt: DateTime!
  user: UserModel
}

type AgencyModel {
  address: String
  agencyType: AgencyType!
  bannerUrl: String
  id: ID!
  isVerified: Boolean!
  name: String!
  socialMediaLinks: [String!]!
  verificationStatus: VerificationStatus!
  website: String
}

"""The type of an agency"""
enum AgencyType {
  OFFLINE
  ONLINE
}

type Category {
  description: String!
  id: ID!
  title: String!
}

type CategoryGroup {
  id: ID!
  title: String!
}

input CreateAgencyInput {
  agencyType: String!
  email: String!
  name: String!
  password: String!
  phoneNumber: String!
}

input CreateCategoryGroupInput {
  slug: String!
  title_en: String!
  title_hy: String!
  title_ru: String!
}

input CreateCategoryInput {
  description_en: String!
  description_hy: String!
  description_ru: String!
  groupId: String!
  slug: String!
  title_en: String!
  title_hy: String!
  title_ru: String!
}

input CreateUserInput {
  email: String!
  fullName: String!
  password: String!
  phoneNumber: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  emailOrPhoneNumber: String!
  password: String!
}

type Mutation {
  createCategory(data: CreateCategoryInput!): Category!
  createCategoryGroup(data: CreateCategoryGroupInput!): CategoryGroup!
  deleteCategory(id: String!): Boolean!
  deleteCategoryGroup(id: String!): CategoryGroup!
  login(data: LoginInput!): AccountModel!
  logout: Boolean!
  registerAgency(data: CreateAgencyInput!): Boolean!
  registerUser(data: CreateUserInput!): Boolean!
  updateAccount(data: UpdateAccountInput!): AccountModel!
  updateCategory(data: UpdateCategoryInput!, id: String!): Category!
  updateCategoryGroup(data: CreateCategoryGroupInput!): CategoryGroup!
}

type Query {
  checkAuth: Boolean!
  findAgencyAccount: AccountModel!
  findAllAccounts: [AccountModel!]!
  findUserAccount: AccountModel!
  getAllCategories: [Category!]!
  getAllCategoryGroups: [CategoryGroup!]!
  getCategoryBySlug(slug: String!): Category!
  getCategoryGroupById(id: String!): CategoryGroup!
}

input UpdateAccountInput {
  avatarUrl: String
  email: String
  phoneNumber: String
}

input UpdateCategoryInput {
  description_en: String!
  description_hy: String!
  description_ru: String!
  slug: String!
  title_en: String!
  title_hy: String!
  title_ru: String!
}

type UserModel {
  fullName: String!
  id: ID!
}

"""The verification status of an agency"""
enum VerificationStatus {
  APPROVED
  PENDING
  REJECTED
}