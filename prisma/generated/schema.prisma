generator client {
  provider = "prisma-client-js"
  output   = "../generated"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Account {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email       String  @unique @db.VarChar(320)
  phoneNumber String  @unique @map("phone_number") @db.VarChar(20)
  password    String? @db.VarChar(255)
  avatarUrl   String? @map("avatar_url") @db.VarChar(2048)

  isEmailVerified Boolean @default(false)
  rating          Float   @default(0)

  role     Roles?  @default(USER)
  isActive Boolean @default(true)

  user           User?
  agency         Agency?
  SocialAccounts SocialAccount[]

  @@map("accounts")
}

model User {
  id       String @id @default(cuid())
  fullName String @map("full_name") @db.VarChar(150)

  account   Account @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId String  @unique

  @@map("users")
}

model Agency {
  id String @id @default(cuid())

  name             String   @unique @db.VarChar(100)
  socialMediaLinks String[] @default([]) @map("social_media_links")
  bannerUrl        String?  @map("banner_url") @db.VarChar(2048)
  address          String?  @db.VarChar(255)
  website          String?  @unique @db.VarChar(2048)

  agencyType         AgencyType         @map("agency_type")
  isVerified         Boolean            @default(false) @map("is_verified")
  verificationStatus VerificationStatus @default(PENDING)

  account   Account @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId String  @unique

  @@map("agencies")
}

model SocialAccount {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  provider   SocialProvider
  providerId String         @db.VarChar(255)
  account    Account        @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId  String

  @@unique([provider, providerId])
  @@map("social_accounts")
}

enum Roles {
  USER
  AGENCY
  MODERATOR
  ADMIN
  SUPERADMIN
}

enum AgencyType {
  ONLINE
  OFFLINE
}

enum VerificationStatus {
  PENDING
  APPROVED
  REJECTED
}

enum SocialProvider {
  GOOGLE
  FACEBOOK
}
